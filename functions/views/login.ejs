<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="keywords" content="Solis, Luna, Arts, Solis and Luna Art">
    <meta name="description" content="a non-profit charity for helping students express themselves">
    <title>Solis and Luna Arts</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Kanit:wght@500&family=Roboto+Mono:wght@700&display=swap"
        rel="stylesheet">
    <link
        href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@600&family=Kanit:wght@500&family=Roboto+Mono:wght@700&display=swap"
        rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Kanit&family=Roboto+Mono:wght@700&display=swap"
        rel="stylesheet">
    <link rel="apple-touch-icon" sizes="180x180" href="./images/Favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="./images/Favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="./images/Favicon/favicon-16x16.png">
    <link rel="manifest" href="/site.webmanifest">
    <link rel="stylesheet" href="/styles/navbar.css">
    <link rel="stylesheet" href="/styles/revealingText.css">
    <link rel="stylesheet" href="/styles/footer.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Ubuntu&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Karla:wght@400&family=Lato:wght@400&display=swap"
        rel="stylesheet">

    <link rel="stylesheet" href="/styles/banner.css">
    <link rel="stylesheet" href="/styles/admin/admin.css">
    <link rel="stylesheet" href="/styles/login.css">
    <link rel="stylesheet" href="/styles/sections.css">
</head>

<body>
    <div class="parent">
        <div class="login">
            <h1 class="title">Login</h1>
            <h5 class="error">Error</h5>
            <form onsubmit="">
                <input type="text" autocomplete="username" placeholder="Email" class="email">
                <input type="password" autocomplete="current-password" placeholder="Password" class="password">
                <input type="submit" value="Submit" class="submit">
            </form>
            <a class="forgot">Forgot password/First Time Login</a>
        </div>
    </div>

    <script type="module">
        import { initializeApp } from 'https://www.gstatic.com/firebasejs/10.2.0/firebase-app.js'

        import { getAnalytics } from 'https://www.gstatic.com/firebasejs/10.2.0/firebase-analytics.js'

        import { getAuth, signInWithEmailAndPassword } from 'https://www.gstatic.com/firebasejs/10.2.0/firebase-auth.js'
        import { getFirestore } from 'https://www.gstatic.com/firebasejs/10.2.0/firebase-firestore.js'

        const firebaseConfig = {
            apiKey: "AIzaSyB4a2FAbr-4kppyum9jftjC-BO6zPqTe_g",
            authDomain: "solis-and-luna-arts.firebaseapp.com",
            projectId: "solis-and-luna-arts",
            storageBucket: "solis-and-luna-arts.appspot.com",
            messagingSenderId: "598578294836",
            appId: "1:598578294836:web:3c7542c7e35d75d3479a61",
            measurementId: "G-6ESZMF6ZHF"
        };

        const app = initializeApp(firebaseConfig);

        let email = document.querySelector('.email')
        let password = document.querySelector('.password')
        let submit = document.querySelector('.submit')
        let form = document.querySelector("form")
        let parent = document.querySelector(".parent")
        let forgot = document.querySelector(".forgot")
        let title = document.querySelector(".title")
        let err = document.querySelector(".error")

        let stage = 0;

        let loginScreen = true;

        forgot.addEventListener('click', () => {
            parent.classList.add("switchFrame")
            setTimeout(() => {
                // form.onsubmit = passwordReset;
                password.style.display = "none"
                submit.value = "Send"
                forgot.style.display = "none"
                title.textContent = "Reset Password"
                parent.classList.remove("switchFrame")
                loginScreen=false;
            }, 1250)
        })

        function handleForm(event) {
             event.preventDefault() 
             if (loginScreen) login()
             else passwordReset()
        } 
        form.addEventListener('submit', handleForm);

        function login() {
            let e = email.value;
            let p = password.value;

            signInWithEmailAndPassword(getAuth(), e, p)
                    .then(async (userCredential) => {
                        const user = userCredential.user;
                        let token = await user.getIdToken()
                        let data = {
                            type: "uid",
                            authToken: token,
                        };

                        document.cookie = "__session="+token;

                        let options = {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        };

                        fetch('/admin/login', options)
                            .then(response => response.json())
                            .then(data => {
                                window.location.href = "/admin/"
                            })
                            .catch(error => {
                                console.error('Error:', error);
                            });
                    })
                    .catch((error) => {
                        err.textContent = error.code.substring(5).replace("-", " ").split(" ").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')
                        err.style.display = "block"
                        console.error("Error signing in:", error.code);
                    });
        }

        function passwordReset() {
            let e = email.value;
            let p = password.value;

            let data = {
                type: "reset",
                email: e,
            };

            let options = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            };

            fetch('/admin/login', options)
                .then(response => response.json())
                .then(data => {
                    window.location.href = data["link"]
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
    </script>
</body>

</html>